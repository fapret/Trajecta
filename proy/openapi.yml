openapi: 3.0.3
info:
  title: Curricula docs
  description: |-
    Especificacion de la APIs de Curricula
  termsOfService: http://localhost:8080/terms/
  contact:
    email: santiago.nicolas.diaz.conde@fing.edu.uy
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Development server
tags:
  - name: admin
    description: Operaciones de admin
paths:
  /model:
    put:
      tags:
        - admin
      summary: Cambia el modelo actual
      operationId: changeModel
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Succesful operation
        '400':
          description: Failed at model reading
      security:
        - curricula_auth:
          - write:model
  /{facultad}:
    get:
      summary: Obten la informacion de una facultad
      operationId: getFacultad
      parameters:
        - name: facultad
          in: path
          description: Nombre de Facultad
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facultad'
        '404':
          description: Facultad not found
  /{facultad}/ucs/{uc}:
    get:
      summary: Obten la informacion de una uc
      operationId: getuc
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: uc
          in: path
          description: Id de uc
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uc'
        '404':
          description: uc not found
  /{facultad}/ucs/{uc}/courses/{course}:
    get:
      summary: Obten la informacion de un curso de una uc
      operationId: getCourse
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: uc
          in: path
          description: Id de uc
          required: true
          schema:
            type: string
        - name: course
          in: path
          description: Edicion del curso
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        '404':
          description: course not found
  /{facultad}/ucs/{uc}/examevaluations/:
    get:
      summary: Obten las evaluaciones de examen de una uc
      operationId: getucexam
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: uc
          in: path
          description: Id de uc
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExamEvaluation'
  /{facultad}/ucs/{uc}/eval:
    post:
      summary: Evalua los requerimientos de un estudiante en una uc en especifico en el modelo
      operationId: eval
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: uc
          in: path
          description: Id de uc
          required: true
          schema:
            type: string
      requestBody:
        description: Datos del estudiante y id uc
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Subject not found
  /{facultad}/carreras/{carrera}:
    get:
      summary: Obten la informacion de una carrera
      operationId: getCarrera
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: carrera
          in: path
          description: Nombre de carrera
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrera'
        '404':
          description: Carrera not found
  /{facultad}/carreras/{carrera}/{plan}:
    get:
      summary: Obten la informacion de un plan
      operationId: getPlan
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: carrera
          in: path
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: path
          description: Plan
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '404':
          description: Plan not found
  /{facultad}/carreras/{carrera}/{plan}/subjects/{subject}:
    get:
      summary: Obten la informacion de una materia en un plan
      operationId: getPlanSubject
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: carrera
          in: path
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: path
          description: Plan
          required: true
          schema:
            type: integer
        - name: subject
          in: path
          description: Nombre de materia
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Succesful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/materia'
        '404':
          description: subject not found
  /{facultad}/carreras/{carrera}/{plan}/eval:
    post:
      summary: Evalua que ucs puede cursar un estudiante
      operationId: evalPlan
      parameters:
        - name: facultad
          in: path
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: carrera
          in: path
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: path
          description: Plan
          required: true
          schema:
            type: integer
      requestBody:
        description: Datos del estudiante y id uc
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uc'
        '400':
          description: Malformed request
        '404':
          description: Plan not found
components:
  schemas:
    uc:
      required:
        - name
        - id
      type: object
      properties:
        name:
          type: string
          example: CALCULO DIV
        id:
          type: string
          example: 1061
        cred:
          type: integer
          example: 13
        valid:
          type: boolean
          example: true
        materia:
          type: array
          items:
            type: string
            example: 4083
        requeriments:
            $ref: '#/components/schemas/Requerimiento'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        examEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/ExamEvaluation'
    Course:
      type: object
      properties:
        year:
          type: integer
          example: 2023
        edition:
          type: integer
          example: 0
        courseEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/CourseEvaluation'
    Facultad:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Facultad de Ingenieria
        carreras:
          type: array
          items:
            $ref: '#/components/schemas/Carrera'
        ucs:
          type: array
          items:
            $ref: '#/components/schemas/uc'
    Carrera:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Ing. En Computacion
        planes:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PlanAbstract:
      type: object
      required:
        - year
      properties:
        year:
          type: integer
          example: 1997
        valid:
          type: boolean
    Plan:
      oneOf:
        - $ref: '#/components/schemas/PlanCreditos'
        - $ref: '#/components/schemas/Planucs'
    PlanCreditos:
      allOf:
        - $ref: '#/components/schemas/PlanAbstract'
        - type: object
          properties:
            mincredits:
              type: integer
            materia:
              type: array
              items:
                $ref: '#/components/schemas/materia'
    Planucs:
      allOf:
        - $ref: '#/components/schemas/PlanAbstract'
        - type: object
          properties:
            ucs:
              type: array
              items:
                type: string
                example: 1061
    materia:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 4083
        name:
          type: string
          example: MATEMATICA
        minCredits:
          type: integer
          example: 70
        ucs:
          type: array
          items:
            type: string
            example: 1030
        materia:
          type: array
          items:
            $ref: '#/components/schemas/materia'
    Requerimiento:
      type: string
    EvaluationFather:
      type: object
      properties:
        date:
          type: string
    Evaluation:
      oneOf:
        - $ref: '#/components/schemas/ExamEvaluation'
        - $ref: '#/components/schemas/CourseEvaluation'
    ExamEvaluation:
      $ref: '#/components/schemas/EvaluationFather'
    CourseEvaluation:
      $ref: '#/components/schemas/EvaluationFather'
    Inscription:
      type: object
      required:
        - date
        - course
      properties:
        date:
          type: string
        course:
          $ref: '#/components/schemas/Course'
    Estudiante:
      type: object
      required:
        - id
        - name
        - carrera
      properties:
        id:
          type: string
          example: test
        name:
          type: string
          example: fulano
        plan:
          type: array
          items:
            type: string
            example: Ing. en computacion
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation'
        inscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Inscription'
  securitySchemes:
    curricula_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://curricula.fapret.com/oauth/authorize
          scopes:
            write:model: Cambia el modelo
    api_key:
      type: apiKey
      name: api_key
      in: header
