openapi: 3.0.3
info:
  title: Currícula docs
  description: |-
    Especificación de la API de Currícula
  version: 1.1.0
servers:
  - url: http://localhost:8080/curricula_microservice
    description: Server
paths:
  /Estudiante:
    get:
      summary: Crear modelo de estudiante
      operationId: createStudentModel
      parameters:
        - name: name
          in: query
          description: Nombre de Estudiante
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: ID de Estudiante
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
  /Faculty:
    get:
      summary: Obtener información de una facultad
      operationId: getFaculty
      parameters:
        - name: faculty
          in: query
          description: Nombre de Facultad
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Facultad'
        '404':
          description: Facultad not found
  /Faculty/ucs:
    get:
      summary: Obtener información de una UC
      operationId: getuc
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: uc
          in: query
          description: Id de UC
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uc'
        '404':
          description: uc not found
  /Faculty/Carrera:
    get:
      summary: Obtener información de una carrera
      operationId: getCarrera
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carrera'
        '404':
          description: Career not found
  /Faculty/Carrera/Plan:
    get:
      summary: Obtener información de un plan
      operationId: getPlan
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Plan
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '404':
          description: Plan not found
  /Faculty/Carrera/Plan/ucs:
    get:
      summary: Obtener información de las UCs de un plan
      operationId: getUCPlan
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Plan
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/uc'
        '404':
          description: Plan not found

  /Faculty/Carrera/Plan/Subjects:
    get:
      summary: Obtener información de una materia en un plan
      operationId: getPlanSubject
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Plan
          required: true
          schema:
            type: integer
        - name: subject
          in: query
          description: Nombre de materia
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/materia'
        '404':
          description: subject not found
  /Estudiante/AddPlan:
    post:
      summary: Agrega una inscripción a plan a un modelo de estudiante
      operationId: addStudentPlan
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Id de plan
          required: true
          schema:
            type: integer
        - name: date
          in: query
          description: Fecha de inscripción
          required: true
          schema:
            type: string
      requestBody:
        description: Modelo .xmi de estudiante (aquí mostrado en JSON)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Plan not found
  /Estudiante/AddEvaluation:
    post:
      summary: Agrega una evaluación a un modelo de estudiante
      operationId: addStudentEval
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Id de plan
          required: true
          schema:
            type: integer
        - name: curricularUnit
          in: query
          description: Id de UC
          required: true
          schema:
            type: string
        - name: evaluation
          in: query
          description: Id de evaluación
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: Tipo de evaluación (false - curso / true - examen)
          required: true
          schema:
            type: boolean
        - name: nota
          in: query
          description: Nota obtenida
          required: true
          schema:
            type: integer
      requestBody:
        description: Modelo .xmi de estudiante (aquí mostrado en JSON)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Subject not found

  /Faculty/ucs/eval:
    post:
      summary: Evalúa los requerimientos de un estudiante en una UC en específico en el modelo
      operationId: eval
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: curricularUnit
          in: query
          description: Id de UC
          required: true
          schema:
            type: string
      requestBody:
        description: Modelo .xmi de estudiante (aquí mostrado en JSON)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Subject not found
  /Faculty/Carrera/Plan/eval:
    post:
      summary: Evalúa qué UCs puede cursar un estudiante
      operationId: evalPlan
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Plan
          required: true
          schema:
            type: integer
      requestBody:
        description: Modelo de estudiante
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/uc'
        '400':
          description: Malformed request
        '404':
          description: Plan not found
  /Faculty/Carrera/Plan/evaluations:
    post:
      summary: Agrega una evaluación a un modelo de estudiante
      operationId: evaluations
      parameters:
        - name: faculty
          in: query
          description: Nombre de facultad
          required: true
          schema:
            type: string
        - name: career
          in: query
          description: Nombre de carrera
          required: true
          schema:
            type: string
        - name: plan
          in: query
          description: Plan
          required: true
          schema:
            type: integer
      requestBody:
        description: Modelo .xmi de estudiante (aquí mostrado en JSON)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Estudiante'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: boolean
        '404':
          description: Plan not found

components:
  schemas:
    uc:
      required:
        - name
        - id
      type: object
      properties:
        name:
          type: string
          example: CALCULO DIV
        id:
          type: string
          example: 1061
        cred:
          type: integer
          example: 13
        valid:
          type: boolean
          example: true
        materia:
          type: array
          items:
            type: string
            example: 4083
        requeriments:
            $ref: '#/components/schemas/Requerimiento'
        courses:
          type: array
          items:
            $ref: '#/components/schemas/Course'
        examEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/ExamEvaluation'
    Course:
      type: object
      properties:
        year:
          type: integer
          example: 2023
        edition:
          type: integer
          example: 0
        courseEvaluations:
          type: array
          items:
            $ref: '#/components/schemas/CourseEvaluation'
    Facultad:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Facultad de Ingenieria
        carreras:
          type: array
          items:
            $ref: '#/components/schemas/Carrera'
        ucs:
          type: array
          items:
            $ref: '#/components/schemas/uc'
    Carrera:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          example: Ing. En Computacion
        planes:
          type: array
          items:
            $ref: '#/components/schemas/Plan'
    PlanAbstract:
      type: object
      required:
        - year
      properties:
        year:
          type: integer
          example: 1997
        valid:
          type: boolean
    Plan:
      oneOf:
        - $ref: '#/components/schemas/PlanCreditos'
        - $ref: '#/components/schemas/Planucs'
    PlanCreditos:
      allOf:
        - $ref: '#/components/schemas/PlanAbstract'
        - type: object
          properties:
            mincredits:
              type: integer
            materia:
              type: array
              items:
                $ref: '#/components/schemas/materia'
    Planucs:
      allOf:
        - $ref: '#/components/schemas/PlanAbstract'
        - type: object
          properties:
            ucs:
              type: array
              items:
                type: string
                example: 1061
    materia:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          example: 4083
        name:
          type: string
          example: MATEMATICA
        minCredits:
          type: integer
          example: 70
        ucs:
          type: array
          items:
            type: string
            example: 1030
        materia:
          type: array
          items:
            $ref: '#/components/schemas/materia'
    Requerimiento:
      type: string
    EvaluationFather:
      type: object
      properties:
        date:
          type: string
    Evaluation:
      oneOf:
        - $ref: '#/components/schemas/ExamEvaluation'
        - $ref: '#/components/schemas/CourseEvaluation'
    ExamEvaluation:
      $ref: '#/components/schemas/EvaluationFather'
    CourseEvaluation:
      $ref: '#/components/schemas/EvaluationFather'
    Inscription:
      type: object
      required:
        - date
        - course
      properties:
        date:
          type: string
        course:
          $ref: '#/components/schemas/Course'
    Estudiante:
      type: object
      required:
        - id
        - name
        - carrera
      properties:
        id:
          type: string
          example: test
        name:
          type: string
          example: fulano
        plan:
          type: array
          items:
            type: string
            example: Ing. en computacion
        evaluations:
          type: array
          items:
            $ref: '#/components/schemas/Evaluation'
        inscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Inscription'
